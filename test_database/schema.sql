PRAGMA foreign_keys = ON;

CREATE TABLE admins (
  email varchar(40) NOT NULL,
  PRIMARY KEY (email),
  FOREIGN KEY (email) REFERENCES users(email) ON DELETE CASCADE
);
CREATE TABLE comments (
  commentid INTEGER PRIMARY KEY AUTOINCREMENT,
  email VARCHAR(40) NOT NULL,
  postid INTEGER NOT NULL,
  text TEXT NOT NULL,
  created DATETIME DEFAULT CURRENT_TIMESTAMP,
  isCommentOfComment BOOLEAN NOT NULL,
  parentCommentid INTEGER DEFAULT NULL,
  anonymous TINYINT(1) NOT NULL DEFAULT 0,
  secret TINYINT(1) NOT NULL DEFAULT 0,
  FOREIGN KEY (email) REFERENCES users (email) ON DELETE CASCADE,
  FOREIGN KEY (postid) REFERENCES posts (postid) ON DELETE CASCADE
);
CREATE TABLE posts (
  postid INTEGER PRIMARY KEY AUTOINCREMENT,
  type VARCHAR(40) NOT NULL,
  title VARCHAR(128) DEFAULT NULL,
  fullname VARCHAR(40) NOT NULL,
  email VARCHAR(40) NOT NULL,
  text TEXT NOT NULL,
  readCount INTEGER NOT NULL,
  isAnnouncement BOOLEAN NOT NULL,
  created DATETIME DEFAULT CURRENT_TIMESTAMP,
  anonymous TINYINT(1) NOT NULL DEFAULT 0,
  FOREIGN KEY (email) REFERENCES users (email) ON DELETE CASCADE
);
CREATE TABLE users (
  email VARCHAR(40) NOT NULL PRIMARY KEY,
  fullname VARCHAR(40) NOT NULL,
  created DATETIME DEFAULT CURRENT_TIMESTAMP,
  bornYear INTEGER NOT NULL,
  bornMonth INTEGER NOT NULL,
  bornDate INTEGER NOT NULL,
  major VARCHAR(30) NOT NULL,
  gradYear INTEGER NOT NULL,
  linkedin VARCHAR(100) DEFAULT NULL
);
CREATE TABLE postlikes(
  postlikeid INTEGER PRIMARY KEY AUTOINCREMENT,
  email VARCHAR(40) NOT NULL,
  postid INTEGER NOT NULL,
  created DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (email) REFERENCES users(email) ON DELETE CASCADE,
  FOREIGN KEY (postid) REFERENCES posts(postid) ON DELETE CASCADE
);
CREATE TABLE commentlikes(
  commentlikeid INTEGER PRIMARY KEY AUTOINCREMENT,
  email VARCHAR(40) NOT NULL,
  commentid INTEGER NOT NULL,
  created DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (email) REFERENCES users(email) ON DELETE CASCADE,
  FOREIGN KEY (commentid) REFERENCES comments(commentid) ON DELETE CASCADE
);